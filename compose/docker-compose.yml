version: "3"
services:
  db001:
    build: ../docker/percona-mysql/
    container_name: db001
    hostname: db001
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/db/db001/data:/var/lib/mysql
      - ../volumes/db/db001/log:/var/log/mysql
      - ../volumes/db/db001/conf/my.cnf:/etc/my.cnf
    networks:
      - mybridge
  db002:
    build: ../docker/percona-mysql/
    container_name: db002
    hostname: db002
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/db/db002/data:/var/lib/mysql
      - ../volumes/db/db002/log:/var/log/mysql
      - ../volumes/db/db002/conf/my.cnf:/etc/my.cnf
    networks:
      - mybridge
  db003:
    build: ../docker/percona-mysql/
    container_name: db003
    hostname: db003
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/db/db003/data:/var/lib/mysql
      - ../volumes/db/db003/log:/var/log/mysql
      - ../volumes/db/db003/conf/my.cnf:/etc/my.cnf
    networks:
      - mybridge
  orchestrator:
    image: openarkcode/orchestrator:latest
    container_name: orchestrator
    hostname: orchestrator
    ports:
      - "3000:3000"
    environment:      
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/management/orchestrator/conf/orchestrator.conf.json:/etc/orchestrator.conf.json
    networks:
      - mybridge
  proxysql:
    image: proxysql/proxysql
    container_name: proxysql
    hostname: proxysql
    ports:
      - "16032:6032"
      - "16033:6033"
    environment:      
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/management/proxysql/data:/var/lib/proxysql
      - ../volumes/management/proxysql/conf/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - mybridge
  prometheus:
    image: prom/prometheus-linux-amd64
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    environment:      
      TZ: "Asia/Seoul"
    volumes:
      - ../volumes/mornitoring/prometheus/data:/data
      - ../volumes/mornitoring/prometheus/conf:/etc/prometheus
    networks:
      - mybridge
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    ports:
      - "13000:3000"
    environment:      
      TZ: "Asia/Seoul"
    networks:
      - mybridge

networks:
  mybridge:
    #external: true
    driver: bridge
